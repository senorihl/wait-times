name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_apps:
    name: Build bare applications 🚀
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2
        with:
          submodules: true
      
      - name: 🏗 Setup node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: lts/*

      - name: 🏗 Setup expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 💭 Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 🏗 Setup cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile

      - name: 🚀 Build with EAS
        run: yarn eas build --profile preview --non-interactive --platform=all || exit 0

  build_expo:
    name: Build Expo GO package 🚀
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: 🏗 Setup node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: lts/*

      - name: 🏗 Setup expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 💭 Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: 🏗 Setup cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile

      - name: 🚀 Publish app
        run: expo publish --non-interactive
